#!/usr/bin/env python

import  netCDF4 as nc
import sys
from argparse import ArgumentParser

def copy_atts(infile, outfile, varname, target=None):
  if not target:
    target=varname
  var = infile.variables[varname]
  atts = {x: var.getncattr(x) for x in var.ncattrs() if x not in ["_FillValue"]}
  outfile.variables[target].setncatts(atts)
  
def create_finish_timefile(startfile, endfile, outputfile):
  sf=nc.Dataset(startfile, 'r')
  ef=nc.Dataset(endfile, 'r')
  of=nc.Dataset(outputfile, 'w')
  of.createDimension('time', None)
  of.createDimension('nb2',2)
  ot=of.createVariable('time',sf.variables['time'].dtype, ('time',))
  otb=of.createVariable('time_bnds',sf.variables['time'].dtype, ('time','nb2'))
  ot[0] = 0.5*(sf.variables['time'][0] + ef.variables['time'][0])
  otb[0,0] = sf.variables['time'][0]
  otb[0,1] = ef.variables['time'][0]
  copy_atts(sf, of, 'time')
  copy_atts(sf, of, 'time', 'time_bnds')
  of.variables['time_bnds'].standard_name='time_bounds'
  of.close()
  

    
def parse_args():
  parser = ArgumentParser()
  parser.description = "Scatterplot two variables from a set of files"
  parser.add_argument("FILES", nargs='*')
  parser.add_argument("-v", "--verbose", 
                    help='''Be verbose''', action="store_true")
  parser.add_argument("-s", "--start", 
                    help='''backup file for start of run''', required=True)
  parser.add_argument("-e", "--end", 
                    help='''File with enddate''',required=True)
  parser.add_argument("-o", "--output", 
                    help='''output file to save to''', required=True)
  options = parser.parse_args()
  return options

def main(argv):
  options = parse_args()
  if options.verbose:
    fu.debug = True
    fu.debug_cerr(dir(options))
  create_finish_timefile(options.start, options.end, options.output)
    
if __name__ == "__main__":
    main(sys.argv)


    
    
